
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.StringJoiner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jabar
 */
// Authors : Rayan Jangda, Armand Daniel Sanchez, Eldrin Preston, Ismael Moreno, Jabari Fowler
public class display_grades extends javax.swing.JFrame {
    private String file_name;
    /**
     * Creates new form display_grades
     */
    public display_grades() {
        initComponents();
        
        //displayGPA();
    }
    public void displayGPA(String name){
//        int row_in = 0;
//        int i = 0;
//        double gpa_total = 0.0;
//        while(course_table.getRowCount() > 0){
//            String letter = course_table.getValueAt(row_in,i).toString();
//            if(letter == "A"){
//                
//            }
//        }
        String filePath = file_name + " gpa" + ".txt";
        File file = new File(filePath);
        
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel model = (DefaultTableModel)gpa_table.getModel();
            
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                
                String[] row = lines[i].toString().split(",");
                if(row != null){
                    model.addRow(row);
                }
            }
            
        } catch (FileNotFoundException ex) {
           ex.printStackTrace();
        }
        double gpa = 0.0;
        
        for(int i = 0; i < course_table.getRowCount(); i++){
            switch(course_table.getValueAt(i,3).toString()){
                case "A":
                {
                    gpa += 4.0;
                    break;
                }
                case "B":
                {
                    gpa += 3.0;
                    break;
                }
                case "C":
                {
                    gpa += 2.0;
                    break;
                }
                case "D":
                {
                    gpa += 1.0;
                    break;
                }
            }
        }
        
        gpa /= course_table.getRowCount();
        
        
        
        
        
    }
    public void displayGrades(String name){
        String filePath = file_name + " grades" + ".txt";
        File file = new File(filePath);
        
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel model = (DefaultTableModel)grades.getModel();
            
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                
                String[] row = lines[i].toString().split(",");
                if(row != null){
                    model.addRow(row);
                }
            }
            
        } catch (FileNotFoundException ex) {
           ex.printStackTrace();
        }
    }
    public void loadFile(String name){
        //String name = jLabel1.getText();
        file_name = name;
        String filePath = name + " info" + ".txt";
        File file = new File(filePath);
        
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel model = (DefaultTableModel)course_table.getModel();
            
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                
                String[] row = lines[i].toString().split(",");
                if(row != null){
                    model.addRow(row);
                }
            }
            
        } catch (FileNotFoundException ex) {
           ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        course_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        gpa_table = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        grades = new javax.swing.JTable();
        remove_course = new javax.swing.JButton();
        save_course = new javax.swing.JButton();
        exit_button = new javax.swing.JButton();
        calc_gpa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        course_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course", "Instructor", "Time/Day", "Grade"
            }
        ));
        jScrollPane2.setViewportView(course_table);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        gpa_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "GPA"
            }
        ));
        gpa_table.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane3.setViewportView(gpa_table);

        grades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Grades"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(grades);

        remove_course.setText("Remove Course");
        remove_course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_courseActionPerformed(evt);
            }
        });

        save_course.setText("Save");
        save_course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_courseActionPerformed(evt);
            }
        });

        exit_button.setText("Exit");
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });

        calc_gpa.setText("Calculate GPA");
        calc_gpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calc_gpaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit_button)
                        .addGap(35, 35, 35))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(save_course)
                                        .addGap(36, 36, 36)
                                        .addComponent(remove_course)
                                        .addGap(23, 23, 23))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(calc_gpa)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit_button))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(remove_course)
                            .addComponent(save_course))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(calc_gpa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void remove_courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_courseActionPerformed
        while(course_table.getRowCount() > 0){
          ((DefaultTableModel) course_table.getModel()).removeRow(course_table
                  .getSelectedRow());
        }
           // TODO add your handling code here:
    }//GEN-LAST:event_remove_courseActionPerformed

    private void save_courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_courseActionPerformed
        String filePath = file_name + " info.txt";
        File file = new File(filePath);
        try {
            StringJoiner joiner = new StringJoiner(",");
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
//            for(int i = 0; i< jTable1.getColumnCount();i++){
//                joiner.add(jTable1.getColumnName(i));
//            }
//            System.out.println(joiner.toString());
//            bw.write(joiner.toString());
//            bw.newLine();
//           
            for(int i = 0; i < course_table.getRowCount(); i++){//rows
                joiner = new StringJoiner(",");
                for(int j = 0; j < course_table.getColumnCount(); j++){//columns
                    Object obj = course_table.getValueAt(i,j);
                    String value = obj == null ? "null" : obj.toString();
                    joiner.add(value);
                }
                System.out.println(joiner.toString());
                bw.write(joiner.toString());
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            
        } catch (IOException ex) {
           ex.notifyAll();
        }
        filePath = file_name + " grades.txt";
        file = new File(filePath);
        try {
            StringJoiner joiner = new StringJoiner(",");
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
//            for(int i = 0; i< jTable1.getColumnCount();i++){
//                joiner.add(jTable1.getColumnName(i));
//            }
//            System.out.println(joiner.toString());
//            bw.write(joiner.toString());
//            bw.newLine();
//           
            for(int i = 0; i < grades.getRowCount(); i++){//rows
                joiner = new StringJoiner(",");
                for(int j = 0; j < grades.getColumnCount(); j++){//columns
                    Object obj = grades.getValueAt(i,j);
                    String value = obj == null ? "null" : obj.toString();
                    joiner.add(value);
                }
                System.out.println(joiner.toString());
                bw.write(joiner.toString());
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            
        } catch (IOException ex) {
           ex.notifyAll();
        }// TODO add your handling code here:
    }//GEN-LAST:event_save_courseActionPerformed

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void calc_gpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calc_gpaActionPerformed
       int num_of_classes = Integer.parseInt(JOptionPane.showInputDialog(null, "Enter the Number of Classes: "));
       double gpa = 0.0;
       for(int i = 0; i< num_of_classes; i++){
        String class_1 = JOptionPane.showInputDialog(null,"Letter Grade for Class " + (i+1));
        if(null == class_1){
            gpa = gpa + 0.0;
        }else switch (class_1) {
               case "A":
                   gpa = gpa + 4.0;
                   break;
               case "B":
                   gpa = gpa + 3.0;
                   break;
               case "C":
                   gpa = gpa + 2.0;
                   break;
               case "D":
                   gpa = gpa + 1.0;
                   break;
               default:
                   gpa = gpa + 0.0;
                   break;
           }
       
       }
       gpa = gpa / num_of_classes;
       gpa_table.setValueAt(gpa, 0, 0);
       
       String filePath = file_name + " gpa.txt";
        File file = new File(filePath);
        try {
            StringJoiner joiner = new StringJoiner(",");
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
//            for(int i = 0; i< jTable1.getColumnCount();i++){
//                joiner.add(jTable1.getColumnName(i));
//            }
//            System.out.println(joiner.toString());
//            bw.write(joiner.toString());
//            bw.newLine();
//           
            for(int i = 0; i < gpa_table.getRowCount(); i++){//rows
                joiner = new StringJoiner(",");
                for(int j = 0; j < gpa_table.getColumnCount(); j++){//columns
                    Object obj = gpa_table.getValueAt(i,j);
                    String value = obj == null ? "null" : obj.toString();
                    joiner.add(value);
                }
                System.out.println(joiner.toString());
                bw.write(joiner.toString());
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            
        } catch (IOException ex) {
           ex.notifyAll();
        }

    }//GEN-LAST:event_calc_gpaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(display_grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(display_grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(display_grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(display_grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new display_grades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calc_gpa;
    private javax.swing.JTable course_table;
    private javax.swing.JButton exit_button;
    private javax.swing.JTable gpa_table;
    private javax.swing.JTable grades;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton remove_course;
    private javax.swing.JButton save_course;
    // End of variables declaration//GEN-END:variables
}
